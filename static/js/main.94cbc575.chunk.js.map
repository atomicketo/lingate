{"version":3,"sources":["components/Header.jsx","components/Drawer.jsx","components/Card.jsx","components/CardContainer.jsx","components/LandingPage.jsx","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","color","title","textAlign","appBar","backgroundColor","button","useStyles","display","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","hide","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","contentShift","margin","PersistentDrawerLeft","classes","useTheme","React","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","onClick","edge","Typography","variant","Button","size","href","Drawer","anchor","paper","direction","Divider","List","map","text","index","ListItem","key","ListItemIcon","ListItemText","primary","type","style","fontSize","fontStyle","card","maxWidth","media","height","MediaCard","props","item","image","desc","console","log","Card","CardActionArea","CardMedia","CardContent","gutterBottom","component","CardActions","CardContainer","data","Container","marginTop","Grid","container","justify","children","LandingPage","Fragment","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.94cbc575.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    color: \"white\"\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  appBar: {\n    backgroundColor: \"#113448\"\n  },\n  button: {\n    color: \"white\"\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            L I N G A T E\n          </Typography>\n          <Button color=\"inherit\" className={classes.button}>\n            Home\n          </Button>\n          <Button color=\"inherit\" className={classes.button}>\n            Learn\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Button from \"@material-ui/core/Button\";\nimport FunctionsRoundedIcon from \"@material-ui/icons/FunctionsRounded\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    backgroundColor: \"#113448\"\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  hide: {\n    display: \"none\"\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n    justifyContent: \"flex-end\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    marginLeft: -drawerWidth\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginLeft: 0\n  },\n  title: {\n    flexGrow: 1,\n    textAlign: \"center\",\n    color: \"white\"\n  },\n  button: {\n    color: \"white\",\n    margin: 3\n  }\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            LINGATE\n          </Typography>\n\n          <Button\n            color=\"inherit\"\n            className={classes.button}\n            variant=\"outlined\"\n            size=\"small\"\n            href=\"http://atomicketo.github.io/stem-12d\"\n          >\n            Home\n          </Button>\n          {/* <Button\n            color=\"inherit\"\n            className={classes.button}\n            variant=\"outlined\"\n            size=\"small\"\n            // target=\"_blank\"\n          >\n            Learn\n          </Button> */}\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\n            \"Limits\",\n            \"Continuity\",\n            \"Derivatives\",\n            \"Chain Rule\",\n            \"Theorem of Calculus\",\n            \"Indefinite Integrals\"\n          ].map((text, index) => (\n            <ListItem button key={text} alignItems=\"flex-start\">\n              <ListItemIcon>\n                {/* {index % 2 === 0 ? <InboxIcon /> : <MailIcon />} */}\n                <FunctionsRoundedIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={\n                  <Typography\n                    type=\"body2\"\n                    style={{ fontSize: 18, fontStyle: \"oblique\" }}\n                  >\n                    {text}\n                  </Typography>\n                }\n              />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n    margin: 30,\n    display: \"inline-block\"\n  },\n  media: {\n    height: 140\n  }\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  const { image, title, desc } = props.item;\n  console.log(\"image: \", image);\n  return (\n    <Card className={classes.card}>\n      <CardActionArea>\n        <CardMedia className={classes.media} image={image} title={title} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {desc}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Study Now\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { Fragment } from \"react\";\nimport { Grid, Container } from \"@material-ui/core\";\nimport Card from \"./Card\";\nconst CardContainer = props => {\n  const data = [\n    {\n      title: \"Limits\",\n      desc:\n        \"A limit is the value that a function (or sequence) approaches as the input (or index) approaches some value. Limits are essential to calculus (and mathematical analysis in general) and are used to define continuity, derivatives, and integrals\",\n      image:\n        \"https://images.unsplash.com/photo-1509228468518-180dd4864904?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    },\n    {\n      title: \"Continuity\",\n      desc:\n        \"A continuous function is a function that does not have any abrupt changes in value, known as discontinuities. More precisely, sufficiently small changes in the input of a continuous function result in arbitrarily small changes in its output\",\n      image:\n        \"https://images.unsplash.com/photo-1543286386-2e659306cd6c?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    },\n    {\n      title: \"Derivatives\",\n      desc:\n        \"The derivative of a function of a real variable measures the sensitivity to change of the function value (output value) with respect to a change in its argument (input value). Derivatives are a fundamental tool of calculus.\",\n      image:\n        \"https://images.unsplash.com/photo-1528082992860-d520150d6f6c?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    },\n    {\n      title: \"Chain Rule\",\n      desc:\n        \"In calculus, the chain rule is a formula to compute the derivative of a composite function. That is, if f and g are differentiable functions, then the chain rule expresses the derivative of their composite f ∘ g\",\n      image:\n        \"https://images.unsplash.com/photo-1574607383077-47ddc2dc51c4?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    },\n    {\n      title: \"Theorem of Calculus\",\n      desc:\n        \"The fundamental theorem of calculus is a theorem that links the concept of differentiating a function with the concept of integrating a function.\",\n      image:\n        \"https://images.unsplash.com/photo-1576834967753-ad2cf1cc8d19?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    },\n    {\n      title: \"Antiderivative\",\n      desc:\n        \"In calculus, an antiderivative, primitive function, primitive integral or indefinite integral of a function f is a differentiable function F whose derivative is equal to the original function f.\",\n      image:\n        \"https://images.unsplash.com/photo-1509228627152-72ae9ae6848d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjF9\"\n    }\n  ];\n  return (\n    <Fragment>\n      {/* <Container maxWidth=\"xl\" style={{ backgroundColor: \"grey\" }}> */}\n      <Container maxWidth=\"xl\" style={{ marginTop: 80 }}>\n        <Grid container justify=\"center\">\n          <Card item={data[0]} className></Card>\n          <Card item={data[1]} className></Card>\n          <Card item={data[2]} className></Card>\n        </Grid>\n        <Grid container justify=\"center\">\n          <Card item={data[3]} className></Card>\n          <Card item={data[4]} className></Card>\n          <Card item={data[5]} className></Card>\n        </Grid>\n      </Container>\n\n      {props.children}\n    </Fragment>\n  );\n};\n\nexport default CardContainer;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Drawer from \"./Drawer\";\nimport CardContainer from \"./CardContainer\";\nconst LandingPage = () => {\n  return (\n    <React.Fragment>\n      <Drawer />\n      <CardContainer />\n    </React.Fragment>\n  );\n};\n\nexport default LandingPage;\n","import React, { Fragment } from \"react\";\nimport LandingPage from \"./components/LandingPage\";\nfunction App() {\n  return (\n    <Fragment>\n      <LandingPage />\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}